library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity testBench is
end testBench;

architecture bench of testBench is
    component matrixProcessor is
        PORT (
        CPU_CLK : IN STD_LOGIC;
        ENABLE : IN STD_LOGIC;
        INSTRUCTION_IN : IN STD_LOGIC_VECTOR(17 DOWNTO 0)
    );
    end component;

    component alu is
        PORT (
        -- Program counter
        PRG_CNT : IN INTEGER;

        -- Bentuk operasi yang akan dilakukan pada matriks
        OPCODE : IN STD_LOGIC_VECTOR(2 DOWNTO 0);

        -- Output untuk menyimpan hasil determinan matriks
        DETER_MAT_A : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
        DETER_MAT_B : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
        DETER_MAT_D : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);

        -- Operand D untuk menyimpan hasil matriks
        OPERAND_11_D : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_12_D : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_13_D : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_21_D : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_22_D : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_23_D : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_31_D : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_32_D : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_33_D : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);

        -- Operand A untuk melakukan operasi matriks 
        OPERAND_11_A : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_12_A : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_13_A : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_21_A : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_22_A : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_23_A : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_31_A : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_32_A : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_33_A : IN STD_LOGIC_VECTOR (7 DOWNTO 0);

        -- Operand B untuk melakukan operasi matriks 
        OPERAND_11_B : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_12_B : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_13_B : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_21_B : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_22_B : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_23_B : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_31_B : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_32_B : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        OPERAND_33_B : IN STD_LOGIC_VECTOR (7 DOWNTO 0)

    );
    end component;

    component ram is

    signal clk : std_logic := '0';
    signal rst : std_logic := '0';
    signal data_in : std_logic_vector(7 downto 0) := (others => '0');
    signal data_out : std_logic_vector(7 downto 0) := (others => '0');
    end architecture bench;